<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>cn.luliangwei</groupId>
	<artifactId>spring-cloud</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>
	<modules>
		<module>spring-cloud-api</module>
		<module>spring-cloud-user</module>
		<module>spring-cloud-core</module>
		<module>spring-lib-utils</module>

		<module>spring-cloud-eruka</module>
		<module>spring-cloud-admin</module>
	</modules>

	<!-- maven下载仓库地址 必须加这个,不然会有依赖问题,猜测是2.0问题-->
	<repositories>
		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/libs-milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>

	<properties>
		<java.version>1.8</java.version>
		<junit.version>4.12</junit.version>
		<maven-compiler-plugin.version>3.6.2</maven-compiler-plugin.version>
		<maven-surefire-plugin.version>2.20</maven-surefire-plugin.version>
		<maven-war-plugin.version>3.1.0</maven-war-plugin.version>
		<maven-jar-plugin.version>3.0.2</maven-jar-plugin.version>
		<maven-javadoc-plugin.version>2.10.4</maven-javadoc-plugin.version>
		<maven-source-plugin.version>3.0.1</maven-source-plugin.version>
		<maven-jxr-plugin.version>2.5</maven-jxr-plugin.version>
		<spring-boot-dependencies.version>2.0.1.RELEASE</spring-boot-dependencies.version>
		<spring-cloud-dependencies.version>Finchley.RC1</spring-cloud-dependencies.version>
	</properties>

	<!-- 子模块如果需要相关的依赖,需要显示的声明,但是不需要版本号, 即所有的spring boot 和 spring cloud 相关依赖都不需要版本号 -->
	<dependencyManagement>
		<dependencies>
			<!-- spring boot dependencies -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring-boot-dependencies.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!-- spring cloud dependencies -->
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud-dependencies.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<!-- 公共依赖库 子模块全部集成,不需要显示的声明 -->
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- spring boot 测试依赖 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- spring boot web基础环境相关依赖 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<scope>compile</scope>
		</dependency>
	</dependencies>

	<!-- 公共环境配置 -->
	<profiles>
		<profile>
			<id>doclint-java8-disable</id>
			<activation>
				<jdk>[1.8,)</jdk>
			</activation>
			<properties>
				<javadoc.opts>-Xdoclint:none</javadoc.opts>
			</properties>
		</profile>
	</profiles>

	<build>
		<finalName>wesign</finalName>
		<resources>
			<!-- 打包时过滤掉工程中测试相关的资源 -->
			<resource>
				<directory>src/test</directory>
				<filtering>true</filtering>
				<excludes>
					<exclude>**/*.*</exclude>
				</excludes>
			</resource>
			<!-- 打包时包含工程中相关的资源 -->
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>**/*</include>
				</includes>
			</resource>
		</resources>

		<pluginManagement>
			<plugins>
				<!-- spring boot应用程序打包插件 -->
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<executions>
						<execution>
							<goals>
								<goal>repackage</goal>
								<goal>build-info</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- flyway插件统一构建和管理数据库版本插件 -->
				<plugin>
					<groupId>org.flywaydb</groupId>
					<artifactId>flyway-maven-plugin</artifactId>
					<version>${flyway.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<!-- 编译项目源代码插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<encoding>UTF-8</encoding>
				</configuration>
				<version>${maven-compiler-plugin.version}</version>
			</plugin>
			<!-- 跑测试用例插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skipAfterFailureCount>1</skipAfterFailureCount>
					<skipTests>false</skipTests>
				</configuration>
				<version>${maven-surefire-plugin.version}</version>
			</plugin>
			<!-- 打包WAR应用插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
				<version>${maven-war-plugin.version}</version>
			</plugin>
			<!-- 打包JAR应用插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<attachClasses>true</attachClasses>
					<archiveClasses>true</archiveClasses>
					<classesClassifier>classes</classesClassifier>
				</configuration>
				<version>${maven-jar-plugin.version}</version>
			</plugin>
			<!-- 生成javadoc插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-javadocs</id>
					</execution>
				</executions>
				<configuration>
					<additionalparam>${javadoc.opts}</additionalparam>
				</configuration>
				<version>${maven-javadoc-plugin.version}</version>
			</plugin>
			<!-- 打包源代码插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<configuration>
					<attach>true</attach>
				</configuration>
				<executions>
					<execution>
						<id>attach-sources</id>
					</execution>
				</executions>
				<version>${maven-source-plugin.version}</version>
			</plugin>
			<!-- 源码(*.java)编码规范检查插件 -->
			<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-checkstyle-plugin</artifactId> 
				<executions> <execution> <id>checkstyle</id> <goals> <goal>check</goal> </goals> 
				</execution> </executions> <configuration> <failsOnError>false</failsOnError> 
				</configuration> <version>${maven-checkstyle-plugin.version}</version> </plugin> -->
		</plugins>
	</build>
</project>